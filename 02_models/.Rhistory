color = "darkgrey", alpha = 0.5,
stackratio=0.45)+
geom_dotplot(data =  dt_panel_5 %>% subset(., scenario %in% c("Healty site", "Proactive strategy")),
aes(x = scenario_short, y = !!sym(column_to_plot)),
binaxis='y', stackdir='center',
dotsize = its_dotsize,
fill = "antiquewhite4",
color = "antiquewhite4",
stackratio=0.05)+
ggthemes::theme_clean() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_blank(),
axis.title = element_text(size = 11),
axis.text = element_text(size = 10),
axis.line = element_line(linewidth = 2),
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
legend.position =  "none"
)+
ylim(0, NA)+
labs(x = paste0("beta = ", as.character(BETA),
"  mob = ", as.character(MOB),
"  repro = ", as.character(REPRO)),
y = index_label)  # Mettre à jour l'étiquette Y avec le nom de la colonne
ggplot()+
geom_violin(data = dt,
aes(x = scenario, y = equi.lost.survi.ad),
fill = "lightblue",
color = "white",
scale = "width",
trim=FALSE, position=position_dodge(1)) +
geom_dotplot(data =  dt,
aes(x = scenario, y = equi.lost.survi.ad),
binaxis='y', stackdir='center',
dotsize = 0.5,
fill = "grey",
color = "white",
stackratio=0.5)
ggplot()+
geom_violin(data = dt,
aes(x = scenario, y = equi.lost.survi.ad),
fill = "lightblue",
color = "white",
scale = "width",
trim=FALSE, position=position_dodge(1)) +
geom_dotplot(data =  dt,
aes(x = scenario, y = equi.lost.survi.ad),
binaxis='y', stackdir='center',
dotsize = 0.5,
fill = "black",
color = "white",
stackratio=0.5)
ggplot()+
geom_violin(data = dt,
aes(x = scenario, y = equi.lost.survi.ad),
fill = "lightblue",
color = "white",
scale = "width",
trim=FALSE, position=position_dodge(1)) +
geom_dotplot(data =  dt,
aes(x = scenario, y = equi.lost.survi.ad),
binaxis='y', stackdir='center',
dotsize = 1,
fill = "black",
color = "white",
stackratio=0.5)
ggplot()+
geom_violin(data = dt,
aes(x = scenario, y = equi.lost.survi.ad),
fill = "blue",
color = "white",
scale = "width",
trim=FALSE, position=position_dodge(1)) +
geom_dotplot(data =  dt,
aes(x = scenario, y = equi.lost.survi.ad),
binaxis='y', stackdir='center',
dotsize = 1,
fill = "black",
color = "white",
stackratio=0.5)
ggplot()+
geom_violin(data = dt,
aes(x = scenario, y = equi.lost.survi.ad),
fill = "deepskyblue3",
color = "white",
scale = "width",
trim=FALSE, position=position_dodge(1)) +
geom_dotplot(data =  dt,
aes(x = scenario, y = equi.lost.survi.ad),
binaxis='y', stackdir='center',
dotsize = 1,
fill = "black",
color = "white",
stackratio=0.5)
ggplot()+
geom_violin(data = dt,
aes(x = scenario, y = equi.lost.survi.ad),
fill = "deepskyblue4",
color = "white",
scale = "width",
trim=FALSE, position=position_dodge(1)) +
geom_dotplot(data =  dt,
aes(x = scenario, y = equi.lost.survi.ad),
binaxis='y', stackdir='center',
dotsize = 1,
fill = "black",
color = "white",
stackratio=0.5)
ggplot()+
geom_violin(data = dt,
aes(x = scenario, y = equi.lost.survi.ad),
fill = "deepskyblue2",
color = "white",
scale = "width",
trim=FALSE, position=position_dodge(1)) +
geom_dotplot(data =  dt,
aes(x = scenario, y = equi.lost.survi.ad),
binaxis='y', stackdir='center',
dotsize = 1,
fill = "black",
color = "white",
stackratio=0.5)
ggplot()+
geom_violin(data = dt,
aes(x = scenario, y = equi.lost.survi.ad),
fill = "cadetblue3",
color = "white",
scale = "width",
trim=FALSE, position=position_dodge(1)) +
geom_dotplot(data =  dt,
aes(x = scenario, y = equi.lost.survi.ad),
binaxis='y', stackdir='center',
dotsize = 1,
fill = "black",
color = "white",
stackratio=0.5)
p = ggplot()+
geom_violin(data = dt,
aes(x = scenario, y = equi.lost.survi.ad),
fill = "cadetblue3",
color = "white",
scale = "width",
trim=FALSE, position=position_dodge(1)) +
geom_dotplot(data =  dt,
aes(x = scenario, y = equi.lost.survi.ad),
binaxis='y', stackdir='center',
dotsize = 1,
fill = "black",
color = "white",
stackratio=0.5)+
ggthemes::theme_clean() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_blank(),
axis.title = element_text(size = 11),
axis.text = element_text(size = 10),
axis.line = element_line(linewidth = 2),
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
legend.position =  "none"
)+
ylim(0, NA)+
labs(x = paste0("beta = ", as.character(BETA),
"  mob = ", as.character(MOB),
"  repro = ", as.character(REPRO)),
y = index_label)  # Mettre à jour l'étiquette Y avec le nom de la colonne
ggplot()+
geom_violin(data = dt,
aes(x = scenario, y = equi.lost.survi.ad),
fill = "cadetblue3",
color = "white",
scale = "width",
trim=FALSE, position=position_dodge(1)) +
geom_dotplot(data =  dt,
aes(x = scenario, y = equi.lost.survi.ad),
binaxis='y', stackdir='center',
dotsize = 1,
fill = "black",
color = "white",
stackratio=0.5)+
ggthemes::theme_clean() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_blank(),
axis.title = element_text(size = 11),
axis.text = element_text(size = 10),
axis.line = element_line(linewidth = 2),
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
legend.position =  "none"
)+
ylim(0, NA)
ggplot()+
geom_violin(data = dt,
aes(x = scenario, y = equi.lost.survi.ad),
fill = "azure3",
color = "white",
scale = "width",
trim=FALSE, position=position_dodge(1)) +
geom_dotplot(data =  dt,
aes(x = scenario, y = equi.lost.survi.ad),
binaxis='y', stackdir='center',
dotsize = 1,
fill = "black",
color = "grey",
stackratio=0.5)+
ggthemes::theme_clean() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_blank(),
axis.title = element_text(size = 11),
axis.text = element_text(size = 10),
axis.line = element_line(linewidth = 2),
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
legend.position =  "none"
)+
ylim(0, NA)
ggplot()+
geom_violin(data = dt,
aes(x = scenario, y = equi.lost.survi.ad),
fill = "azure3",
color = "white",
scale = "width",
trim=FALSE, position=position_dodge(1)) +
geom_dotplot(data =  dt,
aes(x = scenario, y = equi.lost.survi.ad),
binaxis='y', stackdir='center',
dotsize = 1,
fill = "black",
color = "grey",
stackratio=0.5)+
ggthemes::theme_clean() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_blank(),
axis.title = element_text(size = 11),
axis.text = element_text(size = 10),
axis.line = element_line(linewidth = 2),
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
legend.position =  "none"
)+
ylim(0, NA)+
scale_y_log10()
ggplot()+
geom_violin(data = dt,
aes(x = scenario, y = equi.lost.survi.ad),
fill = "azure3",
color = "white",
scale = "width",
trim=FALSE, position=position_dodge(1)) +
geom_dotplot(data =  dt,
aes(x = scenario, y = equi.lost.survi.ad),
binaxis='y', stackdir='center',
dotsize = 1,
fill = "black",
color = "grey",
stackratio=0.5)+
ggthemes::theme_clean() +
theme(
#axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_blank(),
axis.title = element_text(size = 11),
axis.text = element_text(size = 10),
axis.line = element_line(linewidth = 2),
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
legend.position =  "none"
)+
ylim(0, NA)+
scale_y_log10()+
labs(x = paste0("beta = ", as.character(BETA),
"  mob = ", as.character(MOB),
"  repro = ", as.character(REPRO)),
y = index_label)
ggplot()+
geom_violin(data = dt,
aes(x = scenario, y = equi.lost.survi.ad),
fill = "azure3",
color = "white",
scale = "width",
trim=FALSE, position=position_dodge(1)) +
geom_dotplot(data =  dt,
aes(x = scenario, y = equi.lost.survi.ad),
binaxis='y', stackdir='center',
dotsize = 1,
fill = "black",
color = "grey",
stackratio=0.5)+
ggthemes::theme_clean() +
theme(
#axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_blank(),
axis.title = element_text(size = 11),
axis.text = element_text(size = 10),
axis.line = element_line(linewidth = 2),
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
legend.position =  "none"
)+
ylim(0, NA)+
scale_y_log10()
variation_plot = function(dt,
BETA,
MOB,
REPRO,
column_to_plot,
index_label,
its_dotsize = 0.5){
#sc_mean = scenario_mean(dt)
dt = dt %>%
mutate(scenario = as.factor(scenario))
p = ggplot()+
geom_violin(data = dt,
aes(x = scenario, y = !!sym(column_to_plot)),
fill = "azure3",
color = "white",
scale = "width",
trim=FALSE, position=position_dodge(1)) +
geom_dotplot(data =  dt,
aes(x = scenario, y = !!sym(column_to_plot)),
binaxis='y', stackdir='center',
dotsize = 1,
fill = "black",
color = "grey",
stackratio=0.5)+
ggthemes::theme_clean() +
theme(
#axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_blank(),
axis.title = element_text(size = 11),
axis.text = element_text(size = 10),
axis.line = element_line(linewidth = 2),
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
legend.position =  "none"
)+
ylim(0, NA)+
scale_y_log10()+
labs(
# x = paste0("beta = ", as.character(BETA),
#            "  mob = ", as.character(MOB),
#            "  repro = ", as.character(REPRO)),
y = index_label)  #
print(p)
}
dt
variation_plot(dt,
BETA = 0.5,
MO = 5 ,
REPRO = 5,
column_to_plot = equi.lost.survi.ad,
index_label = ENLSA,
its_dotsize = 0.5)
variation_plot(dt,
BETA = 0.5,
MO = 5 ,
REPRO = 5,
column_to_plot = "equi.lost.survi.ad",
index_label = ENLSA,
its_dotsize = 0.5)
variation_plot(dt,
BETA = 0.5,
MO = 5 ,
REPRO = 5,
column_to_plot = "equi.lost.survi.ad",
index_label = "ENLSA",
its_dotsize = 0.5)
dt
variation_dt = function(beta_context = 0.2,
time_at_sea_NB_context = 4,
reaching.repro.prob = 0.5,
tau = 0.1)
{
dispersal_reaction_time_bank = 1:3
nb_adults_equi_bank = c()
nb_infected_colonies_bank = c()
infected_X_time_bank = c()
for (i in 1:length(bank)){
res = stat_model(induced_dispersal_ = T,
initial_number_infected_breeders_A_ = 1,
dispersal_stochactic_ = T,
dispersal_reaction_time_ = dispersal_reaction_time_bank[2],
tau_ = tau,
BETA_ =  beta_context,
TIME_AT_SEA_NB_ = time_at_sea_NB_context,
reaching.repro.prob_ = reaching.repro.prob)
nb_adults_equi_bank = c(nb_adults_equi_bank, res$nb_adults_equi)
nb_infected_colonies_bank = c(nb_infected_colonies_bank, res$nb_infected_colonies)
infected_X_time_bank = c(infected_X_time_bank, res$infected_X_time)
}
dt =
data.frame(
scenario = rep(dispersal_reaction_time_bank,
each = length(res_bank)/length(dispersal_reaction_time_bank)),
equi.lost.survi.ad = nb_adults_equi_bank,
nb_infected_colonies = nb_infected_colonies_bank,
infected_X_time = infected_X_time_bank,
)
return(dt)
}
dt = variation_dt(beta_context = 0.2,
time_at_sea_NB_context = 4,
reaching.repro.prob = 0.5,
tau = 0.1)
dispersal_reaction_time_bank = 1:3
nb_adults_equi_bank = c()
nb_infected_colonies_bank = c()
infected_X_time_bank = c()
i = 1
res = stat_model(induced_dispersal_ = T,
initial_number_infected_breeders_A_ = 1,
dispersal_stochactic_ = T,
dispersal_reaction_time_ = dispersal_reaction_time_bank[2],
tau_ = tau,
BETA_ =  beta_context,
TIME_AT_SEA_NB_ = time_at_sea_NB_context,
reaching.repro.prob_ = reaching.repro.prob)
nb_adults_equi_bank = c(nb_adults_equi_bank, res$nb_adults_equi)
nb_infected_colonies_bank = c(nb_infected_colonies_bank, res$nb_infected_colonies)
infected_X_time_bank = c(infected_X_time_bank, res$infected_X_time)
dt =
data.frame(
scenario = rep(dispersal_reaction_time_bank,
each = length(res_bank)/length(dispersal_reaction_time_bank)),
equi.lost.survi.ad = nb_adults_equi_bank,
nb_infected_colonies = nb_infected_colonies_bank,
infected_X_time = infected_X_time_bank,
)
variation_dt = function(beta_context = 0.2,
time_at_sea_NB_context = 4,
reaching.repro.prob = 0.5,
tau = 0.1)
{
dispersal_reaction_time_bank = 1:3
nb_adults_equi_bank = c()
nb_infected_colonies_bank = c()
infected_X_time_bank = c()
for (i in 1:length(bank)){
res = stat_model(induced_dispersal_ = T,
initial_number_infected_breeders_A_ = 1,
dispersal_stochactic_ = T,
dispersal_reaction_time_ = dispersal_reaction_time_bank[2],
tau_ = tau,
BETA_ =  beta_context,
TIME_AT_SEA_NB_ = time_at_sea_NB_context,
reaching.repro.prob_ = reaching.repro.prob)
nb_adults_equi_bank = c(nb_adults_equi_bank, res$nb_adults_equi)
nb_infected_colonies_bank = c(nb_infected_colonies_bank, res$nb_infected_colonies)
infected_X_time_bank = c(infected_X_time_bank, res$infected_X_time)
}
dt =
data.frame(
scenario = rep(dispersal_reaction_time_bank,
each = length(nb_adults_equi_bank)/length(dispersal_reaction_time_bank)),
equi.lost.survi.ad = nb_adults_equi_bank,
nb_infected_colonies = nb_infected_colonies_bank,
infected_X_time = infected_X_time_bank,
)
return(dt)
}
dt = variation_dt(beta_context = 0.2,
time_at_sea_NB_context = 4,
reaching.repro.prob = 0.5,
tau = 0.1)
dispersal_reaction_time_bank = 1:3
nb_adults_equi_bank = c()
nb_infected_colonies_bank = c()
infected_X_time_bank = c()
i
res = stat_model(induced_dispersal_ = T,
initial_number_infected_breeders_A_ = 1,
dispersal_stochactic_ = T,
dispersal_reaction_time_ = dispersal_reaction_time_bank[2],
tau_ = tau,
BETA_ =  beta_context,
TIME_AT_SEA_NB_ = time_at_sea_NB_context,
reaching.repro.prob_ = reaching.repro.prob)
nb_adults_equi_bank = c(nb_adults_equi_bank, res$nb_adults_equi)
nb_infected_colonies_bank = c(nb_infected_colonies_bank, res$nb_infected_colonies)
infected_X_time_bank = c(infected_X_time_bank, res$infected_X_time)
dt =
data.frame(
scenario = rep(dispersal_reaction_time_bank,
each = length(nb_adults_equi_bank)/length(dispersal_reaction_time_bank)),
equi.lost.survi.ad = nb_adults_equi_bank,
nb_infected_colonies = nb_infected_colonies_bank,
infected_X_time = infected_X_time_bank,
)
length(nb_adults_equi_bank)/length(dispersal_reaction_time_bank)
nb_adults_equi_bank
length(nb_adults_equi_bank)
dispersal_reaction_time_bank
dispersal_reaction_time_bank = 1:3
nb_adults_equi_bank = c()
nb_infected_colonies_bank = c()
infected_X_time_bank = c()
for (i in 1:length(bank)){
res = stat_model(induced_dispersal_ = T,
initial_number_infected_breeders_A_ = 1,
dispersal_stochactic_ = T,
dispersal_reaction_time_ = dispersal_reaction_time_bank[2],
tau_ = tau,
BETA_ =  beta_context,
TIME_AT_SEA_NB_ = time_at_sea_NB_context,
reaching.repro.prob_ = reaching.repro.prob)
nb_adults_equi_bank = c(nb_adults_equi_bank, res$nb_adults_equi)
nb_infected_colonies_bank = c(nb_infected_colonies_bank, res$nb_infected_colonies)
infected_X_time_bank = c(infected_X_time_bank, res$infected_X_time)
}
